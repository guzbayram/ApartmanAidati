# Generated by Django 5.2.1 on 2025-05-31 08:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Blok",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ad", models.CharField(max_length=50, verbose_name="Blok Adı")),
            ],
            options={
                "verbose_name": "Blok",
                "verbose_name_plural": "Bloklar",
                "ordering": ["ad"],
            },
        ),
        migrations.CreateModel(
            name="Kullanici",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "site_kodu",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Site Kodu"
                    ),
                ),
                (
                    "is_yonetici",
                    models.BooleanField(default=False, verbose_name="Yönetici mi?"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kullanıcı",
                "verbose_name_plural": "Kullanıcılar",
                "ordering": ["first_name", "last_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Daire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("daire_no", models.CharField(max_length=20, verbose_name="Daire No")),
                (
                    "telefon_no",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Telefon Numarası",
                    ),
                ),
                (
                    "devir_bakiye_gecen_yil",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Devir Bakiye (Geçen Yıldan)",
                    ),
                ),
                (
                    "devir_bakiye_yili",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Devir Bakiye Yılı"
                    ),
                ),
                (
                    "blok",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daireler",
                        to="yonetim.blok",
                        verbose_name="Blok",
                    ),
                ),
                (
                    "kullanici",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sakin_oldugu_daire",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Sakin",
                    ),
                ),
            ],
            options={
                "verbose_name": "Daire",
                "verbose_name_plural": "Daireler",
                "ordering": ["blok", "daire_no"],
                "unique_together": {("blok", "daire_no")},
            },
        ),
        migrations.CreateModel(
            name="Aidat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tutar",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Tutar"
                    ),
                ),
                (
                    "tarih",
                    models.DateField(null=True, verbose_name="Ödeme Tarihi/Vadesi"),
                ),
                (
                    "aciklama",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Açıklama"
                    ),
                ),
                (
                    "makbuz",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="aidat_makbuzlari/",
                        verbose_name="Makbuz",
                    ),
                ),
                (
                    "daire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aidatlar",
                        to="yonetim.daire",
                        verbose_name="Daire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aidat Kaydı",
                "verbose_name_plural": "Aidat Kayıtları",
                "ordering": ["-tarih", "-id"],
            },
        ),
        migrations.AddField(
            model_name="kullanici",
            name="aktif_daire",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="aktif_kullanicisi",
                to="yonetim.daire",
                verbose_name="Aktif Daire",
            ),
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ad", models.CharField(max_length=200, verbose_name="Site Adı")),
                ("adres", models.CharField(max_length=500, verbose_name="Adres")),
                (
                    "kod",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Site Kodu"
                    ),
                ),
                (
                    "aidat_miktari",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Varsayılan Aidat Miktarı",
                    ),
                ),
                (
                    "tanimli_gider_turleri",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayırarak gider türlerini giriniz (örn: Elektrik,Su,Asansör Bakımı).",
                        null=True,
                        verbose_name="Tanımlı Gider Türleri",
                    ),
                ),
                (
                    "makbuz_yukleme_aktif",
                    models.BooleanField(
                        default=True,
                        verbose_name="Aidat/Gider Makbuzu Yükleme Aktif mi?",
                    ),
                ),
                (
                    "yonetici",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="yonettigi_siteler",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yönetici",
                    ),
                ),
            ],
            options={
                "verbose_name": "Site",
                "verbose_name_plural": "Siteler",
                "ordering": ["ad"],
            },
        ),
        migrations.CreateModel(
            name="Gider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tur", models.CharField(max_length=100, verbose_name="Gider Türü")),
                (
                    "tutar",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Tutar"
                    ),
                ),
                ("tarih", models.DateField(null=True, verbose_name="Gider Tarihi")),
                (
                    "aciklama",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Açıklama"
                    ),
                ),
                (
                    "makbuz",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="gider_makbuzlari/",
                        verbose_name="Makbuz/Fatura",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="giderler",
                        to="yonetim.site",
                        verbose_name="Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gider Kaydı",
                "verbose_name_plural": "Gider Kayıtları",
                "ordering": ["-tarih", "-id"],
            },
        ),
        migrations.AddField(
            model_name="blok",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bloklar",
                to="yonetim.site",
                verbose_name="Site",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="blok",
            unique_together={("site", "ad")},
        ),
        migrations.CreateModel(
            name="YillikRaporPDF",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("yil", models.IntegerField(verbose_name="Rapor Yılı")),
                (
                    "pdf_dosyasi",
                    models.FileField(
                        upload_to="yillik_raporlar/", verbose_name="PDF Dosyası"
                    ),
                ),
                (
                    "olusturulma_tarihi",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "rapor_basligi",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Rapor Başlığı"
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="yillik_raporlar",
                        to="yonetim.site",
                        verbose_name="Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yıllık Rapor PDF",
                "verbose_name_plural": "Yıllık Rapor PDF'leri",
                "ordering": ["site", "-yil", "-olusturulma_tarihi"],
                "unique_together": {("site", "yil")},
            },
        ),
    ]
